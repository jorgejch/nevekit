# This workflow will:
#  -  install Python dependencies, run tests and lint, possibly with a variety of Python versions
#  -  build and publish package distributions to PyPI
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and release

on:
  push:
    tags:
      - 'v*'
jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.12", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
        pip install .
    - name: Lint with flake8
      run: |
        # Run flake8 on all .py files in the src directory and subdirectories.
        flake8 --max-line-length=120 --count --show-source --statistics --max-complexity=10 src
    - name: Test with pytest
      run: |
        # Run the unit test file in each package with coverage
        pytest nevekit/**/test_*.py
  release:
    # skip this job if it is not a tagged commit like v*.
    # see https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#example-using-a-github-context
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-package.txt ]; then pip install -r requirements-package.txt; fi
    - name: Build package
      run: |
        python -m build 
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1